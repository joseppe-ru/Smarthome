==Legende:===========================================
#Code	#Nickname		#Name
PSM		PiSer-Modul		RaspberryPi Server Modul
FWU		FrWeb-UI		Frontend Website UI 
NDI		Nice-face		Network Device Interface
PPI		PiPi-Com 		RaspberryPi to RaspberryPi Comunication
RAAC	RaAr-Anal-Com	RaspberryPi to Arduino Analog Comunication
======================================================

==PiSer-Modul:============================================================================
Ziel ist einen Webserver zu programmieren, auf welchem eine Website gehostet werden kann.
Alle Geräte im Netzwerk sollen darauf zugreifen können.
Vorzugsweise soll das ist Rust geschehen.
Ausweichmöglichkeit bietet eine Fertigversion wie Node.js oder anderes...
==========================================================================================

==ReWeb-UI:=============================================================================
Ziel ist die Programmierung einer Website, welche meine "Nice-face" Schnittstelle nutzt.
Von der Website aus sollen Smarthome-Geräte eingerichtet, verwaltet und bedient werden.
========================================================================================

==Nice-face:======================================================================
Ziel ist die Entwicklung einer Schnittstelle für eine Web-Programmiersprache, 
welche es ermöglichen soll, Smarthome-Geräte zu konfigurieren.
Das Interface soll auf API's bekannter Hersteller von Smarthome-Geräten zugreifen.
Ebenfalls soll die "PiPi-Com" integriert werden.
================================================================================== 

==PiPi-Com:=================================================================================================
Ziel ist die Pi zu Pi Kommunikation über das Netzwerk sicher zu stellen.
Ein RaspberryPi soll von einem anderen im Netzwerk als Smarthome-Gerät erkannt und integriert werden können.
Die Vielfältigkeit der Anwendungen an diesem Punkt könnten kaum umfangreicher sein.
Eine Benutzung findet es in der "RaAr-Anal-Com".
============================================================================================================

==RaAr-Anal-Com:============================================================
Ziel ist die Kommunkation zwischen RaspberryPi und Arduino über Verdrahtung.
An dieser stelle findet das "IR-Remote" seinen Platz.
============================================================================

1. Theorie klären

1.1 (NDI)
	Kann ich über die Schnittstelle der Hersteller Smart-Geräte anbinden?
		- Für welche Programmiersprachen gibt es welche API's? (Python, Javascript, WASM?, Docker & GO?, PHP, Rust) (tuya, UPNP, ...) -> Tabelle bitte!
		- mehrere API's gleichzeitig?

1.2 (PPI)
	Wie kann ich einen RaspberryPI als Smart-Gerät einrichten? 
		- Brauche ich dafür eigenen server und client oder kann das mit über eine der API's (siehe 1.) laufen? 
		-> wenn ja: ich muss einen eigenen Server und Client Programmieren:
			- gegenprüfen mit 1.
				-> wie kann ich Server/Client darstellen, ist das Realistisch?
1.3 (FWU)(PSM) 
	Wie kann ich die ausgwählte Programmiersprache (siehe 1.) als API für meine Website oder Server nuzten?
		- spielt es eine Rolle, welche Art von Server ich habe? (Node.js, Rust, ...)
		- Zugriff auf script, funtionen ausführen, Anzeige und Bedienung -> Muss alles von Website aus möglich sein 

1.4 (PSM)
	Webserver mit Rust programmieren???

MS1: Programmiersprache auserwählen!!
		-> Aufwandt-Nutzen beachten!!

2. Erste Test für Prognosen (Wie Komplex->ist das machbar; funktioniert es überhaupt, wie in Theorie beschrieben)

2.1 (NDI)
	Test der API für Smart-Geräte 
		- kein Umfangreiches Programm
		- Prognose, könnte die Integration/Benutzung der API von Erfolg gekrönt sein?
			-> falls nein, Bitte zurück zu MS1

2.2 (PSM)
	Rustikaler ansatzt für Webserver
		-Rust unkenntnisse missbrauchen

2.3 (FWU)
	Rustikale Website für kommende Shnittstelle (siehe 2.1)
		-> direkte Integration mit Webserver (siehe 2.2)

MS2: Alle Tests abgeschlossen!!
	-> an diesem Punkt brauche ich:
		- einen funktionierenden Webserver
		- eine kleine Website, die darauf läuft
		- ein Programm auf der Website, welches mein Nice-face ausführen kann
        - den Ansatz des Nice-face

3. Ausbau der Grundfunktionen (Die Parameter kann ich jetzt noch nicht festlegen)




